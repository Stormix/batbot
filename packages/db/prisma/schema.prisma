generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(dbgenerated("prefix_uuid('account_'::text)"))
  userId            String
  type              String
  username          String?
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(dbgenerated("prefix_uuid('session_'::text)"))
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(dbgenerated("prefix_uuid('user_'::text)"))
  name             String?
  email            String?            @unique
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  sessions         Session[]
  
  BotConfiguration BotConfiguration[]
  BotCommand       BotCommand[]
  ChatMessage ChatMessage[]

  @@unique([name])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model BotConfiguration {
  id                     String   @id @default(dbgenerated("prefix_uuid('bot_configuration_'::text)"))
  userId  String
  enabled Boolean @default(false)
  commandPrefix String @default("!")
  enabledPlatforms String[] @default([])

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}

model BotCommand {
  id     String @id @default(dbgenerated("prefix_uuid('bot_command_'::text)"))
  userId String

  command  String
  response String
  cooldown Int     @default(0)
  aliases  String[]  @default([])
  minRole  Int     @default(0)
  enabled  Boolean @default(false)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, command])
}

model ChatMessage {
  id        String  @id @default(dbgenerated("prefix_uuid('chat_message_'::text)"))
  userId    String
  username  String
  message   String
  platform  String
  timestamp DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model BotCommandRuns {
  id        String  @id @default(dbgenerated("prefix_uuid('bot_command_runs_'::text)"))
  command   String
  platform  String
  timestamp DateTime
  userId    String
}